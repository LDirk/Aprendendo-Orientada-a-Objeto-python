# A matriz sera 10x10
import random

#Ponto
class Point:
	def __init__(self, x, y):
		self.x = x
		self.y = y 	

	# representação string	
	def __str__(self):	
		return '<%s,%s>' % (self.x, self.y)

class Robo(Point):

	

	# Subir na matriz	
	def move_up(self):
		if self.y < 10:
			self.y = self.y + 1
		else:
			print("Movimento Proibido")

	# Descer ma matriz
	def move_down(self):
		if self.y > 0:
			self.y = self.y - 1 
		else:
			print("Movimento Proibido")

	# Mover para esquerda
	def move_lef(self):
		if self.x > 0:
			self.x = self.x - 1
		else:
			print("Movimento Proibido")

	# Mover para direita
	def move_right(self):
		if self.x < 10:
			self.x = self.x + 1
		else:
			print("Movimento Proibido")

#Recompensa
class Reward(Point):
	def __init__(self,x,y,name):
		super(Reward, self).__init__(x,y)
		self.name = name 

	#chamado para representação string do objeto	
	def __str__(self):	
		return '<%s,%s>: %s ' % (self.x, self.y, self.name)

	
# Ver se o robo está no quadrado da recompensa
def check_reward(robot, rewards):	
	for reward in rewards:
		# rewards é uma lista com as recompensas
		if reward.x == robot.x and reward.y == robot.y:
			print("O robo achou a recompensa : %s " % reward.name)
			
r1 = Reward(random.randint(0,10),random.randint(0,10) ,"Moeda")
r2 = Reward(random.randint(0,10),random.randint(0,10) ,"Gasolina")
r3 = Reward(random.randint(0,10),random.randint(0,10) ,"Arma")
r4= Reward(random.randint(0,10),random.randint(0,10) ,"Moeda")
r5= Reward(random.randint(0,10),random.randint(0,10) ,"Gasolina")
r6= Reward(random.randint(0,10),random.randint(0,10) ,"Arma")
r7= Reward(random.randint(0,10),random.randint(0,10) ,"Moeda")
r8= Reward(random.randint(0,10),random.randint(0,10) ,"Gasolina")
r9= Reward(random.randint(0,10),random.randint(0,10) ,"Arma")
rewards = [r1,r2,r3,r4,r5,r6,r7,r8,r9]



robot = Robo(random.randint(0,10),random.randint(0,10))

for i in range(10):
	moviment = input("Digite up, dowm, left ou right para o movimento: ")
	if moviment == "up":
		robot.move_up()
	elif moviment == "down":
		robot.move_down()
	elif moviment == "left":
		robot.move_left
	elif moviment == "Right":
		robot.move_right
	else: 
		print("Movimento inválido")
		#faz voltar para cima do loop
		continue
	print(robot)
	check_reward(robot, rewards)
